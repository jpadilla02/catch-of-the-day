{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","start","exit","react_transition_group","component","enter","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","newProvider","toLowerCase","charAt","toUpperCase","slice","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.ec60ac50.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = event => {\n    //1. Store the form from submitting\n    event.preventDefault();\n    //2. get the text from that input\n    const storeName = this.myInput.current.value;\n    //3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store ➞</button>\n      </form>\n    );\n  }\n}\n\nStorePicker.propTypes = {\n  history: PropTypes.string\n};\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { start: 5000, exit: 5000 }\n    };\n    //Make sure fish is loaded before we continue.\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    } else {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            <span>\n              <TransitionGroup component=\"span\" className=\"count\">\n                <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 500, exit: 500 }}\n                >\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n              lbs {fish.name} {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.removeFromOrder(key)}>\n                &times;\n              </button>\n            </span>\n          </li>\n        </CSSTransition>\n      );\n    }\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = event => {\n    //1. Stop form from submitting\n    event.preventDefault();\n    //2.Get values\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    //Reset fish form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" name=\"name\" ref={this.nameRef} placeholder=\"Name\" />\n        <input\n          type=\"text\"\n          name=\"price\"\n          ref={this.priceRef}\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          type=\"text\"\n          name=\"image\"\n          ref={this.imageRef}\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nAddFishForm.propTypes = {\n  addFish: PropTypes.func\n};\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.shape({\n      name: PropTypes.string,\n      price: PropTypes.number,\n      status: PropTypes.string,\n      image: PropTypes.string,\n      desc: PropTypes.string\n    }),\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func\n  };\n  handleChange = event => {\n    //1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fishes.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fishes.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fishes.status}\n        >\n          <option onChange={this.handleChange} value=\"available\">\n            Fresh!\n          </option>\n          <option onChange={this.handleChange} value=\"unavailable\">\n            Sold Out!\n          </option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fishes.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fishes.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"GitHub\")}>\n      Log in With GitHub\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDuWRDCsCfNK4vFjmr0E0hCa2lGQw_WX1M\",\n  authDomain: \"catch-of-the-day-juan-padilla.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-juan-padilla.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebase.database());\n\n//This is a named export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    //1. Look up the current store in the database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    //2. Claim if there no owner\n    if (!store.owner) {\n      //save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    //3. Set the staate of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n  authenticate = provider => {\n    let newProvider =\n      provider\n        .toLowerCase()\n        .charAt(0)\n        .toUpperCase() + provider.slice(1).toLowerCase();\n    const authProvider = new firebase.auth[`${newProvider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    //Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    //2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you aren ot the owner!</p>\n        </div>\n      );\n    }\n    //3. they must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fishes={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string\n    }),\n    addToOrder: PropTypes.func\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Cart\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  //State\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  //Synching state to the firebase database\n  componentDidMount() {\n    const params = this.props.match.params;\n    //First resinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  //Add Fish Method\n  addFish = fish => {\n    // Steps for updating State\n    //1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    //2. Add new fish to the fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    //3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updateFish) => {\n    //1. take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    //2. Update that state\n    fishes[key] = updateFish;\n    //3.Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    //1. Take a copy of state\n    const fishes = { ...this.state.fishes };\n    //2. update the state\n    fishes[key] = null;\n    //3. update state\n    this.setState({ fishes });\n  };\n\n  //Load Fishes Method\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  //Add to Order method\n  addToOrder = key => {\n    //1. Take a copy of state\n    const order = { ...this.state.order };\n    //2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    //3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  //Remove From Order\n  removeFromOrder = key => {\n    //1. Take a copy of state\n    const order = { ...this.state.order };\n    //2. Remove from order\n    delete order[key];\n    //3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                details={this.state.fishes[key]}\n                index={key}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          deleteFish={this.deleteFish}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found?!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}